package dinoTest;



import java.awt.*;
import java.util.ArrayList;

import javax.swing.ImageIcon;


public class Game extends Thread {
	
	
	
	private Image judgementLineImage = new ImageIcon(Main.class.getResource("/Img/perfectline.png")).getImage();
	private Image noteRouteQImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	private Image noteRouteWImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	private Image noteRouteEImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	private Image noteRouteRImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	private Image judgeImage;
	private boolean isGameFinished = false;
	private Image resultImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();	
	
	private String titleName;
	private String difficulty;
	private String musicTitle;
	private Music gameMusic;
	private int score = 0;
	private int combo = 0;
	private int maxCombo = 0;
	private Beat[] beats;
	
	ArrayList<Note> noteList = new ArrayList<Note>();
	
	public Game(String titleName, String difficulty, String musicTitle) {
		this.titleName = titleName;
		this.difficulty = difficulty; 
		this.musicTitle = musicTitle;
		gameMusic = new Music(this.musicTitle, false);
	}
	
	public void screenDraw(Graphics g) {
		g.drawImage(noteRouteQImage, -223, 0, null);
		g.drawImage(noteRouteWImage, -74, 0, null);
		g.drawImage(noteRouteEImage, 75, 0, null);
		g.drawImage(noteRouteRImage, 224, 0, null);
		g.drawImage(judgementLineImage, 0, 0, null); 
		g.setColor(Color.RED);
		for(int i = 0; i < noteList.size(); i++) {
			Note note = noteList.get(i);
			if(note.getY()>620) {
				judgeImage = new ImageIcon(Main.class.getResource("/Img/miss_but.png")).getImage();
			}
			if(!note.isProceeded()) {
				noteList.remove(i);
				i--;
			}
			else {
				note.screenDraw(g);
			}
		}
		g.setColor(Color.white);
		g.setFont(new Font("Hack", Font.BOLD, 20));
		g.drawString(titleName,280 ,50 );
		g.drawString(difficulty,380 ,70 );
		g.setFont(new Font("Elephant", Font.BOLD, 50));
		g.setColor(Color.yellow);
		g.drawString(String.format("%06d", score), 285, 120);
		g.setFont(new Font("Hack", Font.BOLD, 60));
		g.setColor(Color.white);
		g.drawString("" + combo, 380 , 300);
		g.setFont(new Font("Elephant", Font.BOLD, 40));
		g.setColor(Color.white);
		g.drawString("Q",155 ,595 );
		g.drawString("W",304 ,595 );
		g.drawString("E",453 ,595 );
		g.drawString("R",602 ,595 );
		g.drawImage(judgeImage, 255,250,null);
		if (isGameFinished) {
		    g.drawImage(resultImage, 0, 0, null); 
		    g.setColor(Color.WHITE);
		    g.setFont(new Font("Arial", Font.BOLD, 40));
		    g.drawString("Final Score: " + score, 250, 300); // 점수 표시

		    g.setFont(new Font("Arial", Font.BOLD, 30));
		    g.drawString("Max Combo: " + maxCombo, 250, 350);

		    g.setFont(new Font("Arial", Font.BOLD, 35));
		    g.setColor(Color.YELLOW);
		    g.drawString("Rank: " + getRank(), 250, 400); // 랭크 표시
		}
	}
	public void pressQ() {
		judge("Q");
		noteRouteQImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine_push.png")).getImage();
		new Music("notePress.mp3",false).start();
	}
	public void releaseQ() {
		noteRouteQImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	}
	public void pressW() {
		judge("W");
		noteRouteWImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine_push.png")).getImage();
		new Music("notePress.mp3",false).start();
	}
	public void releaseW() {
		noteRouteWImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	}
	public void pressE() {
		judge("E");
		noteRouteEImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine_push.png")).getImage();
		new Music("notePress.mp3",false).start();
	}
	public void releaseE() {
		noteRouteEImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	}
	public void pressR() {
		judge("R");
		noteRouteRImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine_push.png")).getImage();
		new Music("notePress.mp3",false).start();
	}
	public void releaseR() {
		noteRouteRImage = new ImageIcon(Main.class.getResource("/Img/rhythmLine.png")).getImage();
	}
	
	@Override
	public void run() {
		int beatIndex = 0;
		dropNotes();
		isGameFinished = true;
	}
	public void close() {
		gameMusic.close();
		this.interrupt();
	}
	public void dropNotes() {
		beats = null;
		if(titleName.equals("NewJeans - Supernatural")) {
			String[] keys = {"Q", "W", "E", "R"};
			ArrayList<Beat> beatList = new ArrayList<>();
			beatList.add(new Beat(9334, "Q"));
			beatList.add(new Beat(10286, "W"));
			beatList.add(new Beat(10541, "E"));
			beatList.add(new Beat(11192, "R"));
			beatList.add(new Beat(11493, "Q"));
			beatList.add(new Beat(12492, "W"));
			beatList.add(new Beat(12747, "E"));
			beatList.add(new Beat(13699, "R"));
			beatList.add(new Beat(14675, "Q"));
			beatList.add(new Beat(14953, "W"));
			beatList.add(new Beat(15487, "E"));
			beatList.add(new Beat(15905, "R"));
			beatList.add(new Beat(16880, "Q"));
			beatList.add(new Beat(17182, "W"));
			beatList.add(new Beat(17693, "E"));
			beatList.add(new Beat(18227, "R"));
			beatList.add(new Beat(19086, "Q"));
			beatList.add(new Beat(19342, "W"));
			beatList.add(new Beat(19713, "E"));
			beatList.add(new Beat(19969, "R"));
			beatList.add(new Beat(20387, "Q"));
			beatList.add(new Beat(21292, "W"));
			beatList.add(new Beat(22476, "E"));
			beatList.add(new Beat(23614, "R"));
			beatList.add(new Beat(24311, "Q"));
			beatList.add(new Beat(24845, "W"));
			beatList.add(new Beat(25379, "E"));
			beatList.add(new Beat(26331, "R"));
			beatList.add(new Beat(27028, "Q"));
			beatList.add(new Beat(28003, "W"));
			beatList.add(new Beat(28839, "E"));
			beatList.add(new Beat(29210, "R"));
			beatList.add(new Beat(30185, "Q"));
			beatList.add(new Beat(31393, "W"));
			beatList.add(new Beat(32298, "E"));
			beatList.add(new Beat(32647, "R"));
			beatList.add(new Beat(33134, "Q"));
			beatList.add(new Beat(33599, "W"));
			beatList.add(new Beat(34504, "E"));
			beatList.add(new Beat(35294, "R"));
			beatList.add(new Beat(35828, "Q"));
			beatList.add(new Beat(36896, "W"));
			beatList.add(new Beat(37662, "E"));
			beatList.add(new Beat(37918, "R"));
			beatList.add(new Beat(39009, "Q"));
			beatList.add(new Beat(39845, "W"));
			beatList.add(new Beat(40240, "E"));
			beatList.add(new Beat(40890, "R"));
			beatList.add(new Beat(41215, "Q"));
			beatList.add(new Beat(41935, "W"));
			beatList.add(new Beat(42399, "E"));
			beatList.add(new Beat(43003, "R"));
			beatList.add(new Beat(43421, "Q"));
			beatList.add(new Beat(43839, "W"));
			beatList.add(new Beat(44651, "E"));
			beatList.add(new Beat(45743, "R"));
			beatList.add(new Beat(46463, "Q"));
			beatList.add(new Beat(46857, "W"));
			beatList.add(new Beat(47809, "E"));
			beatList.add(new Beat(48994, "R"));
			beatList.add(new Beat(49899, "Q"));
			beatList.add(new Beat(50294, "W"));
			beatList.add(new Beat(51246, "E"));
			beatList.add(new Beat(52105, "R"));
			beatList.add(new Beat(52918, "Q"));
			beatList.add(new Beat(53452, "W"));
			beatList.add(new Beat(54520, "E"));
			beatList.add(new Beat(55263, "R"));
			beatList.add(new Beat(55611, "Q"));
			beatList.add(new Beat(56703, "W"));
			beatList.add(new Beat(57492, "E"));
			beatList.add(new Beat(57864, "R"));
			beatList.add(new Beat(58514, "Q"));
			beatList.add(new Beat(58839, "W"));
			beatList.add(new Beat(59652, "E"));
			beatList.add(new Beat(59977, "R"));
			beatList.add(new Beat(60604, "Q"));
			beatList.add(new Beat(61068, "W"));
			beatList.add(new Beat(61602, "E"));
			beatList.add(new Beat(62229, "R"));
			beatList.add(new Beat(63135, "Q"));
			beatList.add(new Beat(64017, "W"));
			beatList.add(new Beat(64388, "E"));
			beatList.add(new Beat(65317, "R"));
			beatList.add(new Beat(65596, "Q"));
			beatList.add(new Beat(66618, "W"));
			beatList.add(new Beat(67523, "E"));
			beatList.add(new Beat(67802, "R"));
			beatList.add(new Beat(68336, "Q"));
			beatList.add(new Beat(68870, "W"));
			beatList.add(new Beat(69729, "E"));
			beatList.add(new Beat(70031, "R"));
			beatList.add(new Beat(70542, "Q"));
			beatList.add(new Beat(71029, "W"));
			beatList.add(new Beat(71912, "E"));
			beatList.add(new Beat(72190, "R"));
			beatList.add(new Beat(72817, "Q"));
			beatList.add(new Beat(73119, "W"));
			beatList.add(new Beat(74141, "E"));
			beatList.add(new Beat(74419, "R"));
			beatList.add(new Beat(74768, "Q"));
			beatList.add(new Beat(75395, "W"));
			beatList.add(new Beat(76091, "E"));
			beatList.add(new Beat(76556, "R"));
			beatList.add(new Beat(77206, "Q"));
			beatList.add(new Beat(77554, "W"));
			beatList.add(new Beat(78274, "E"));
			beatList.add(new Beat(78645, "R"));
			beatList.add(new Beat(79203, "Q"));
			beatList.add(new Beat(79853, "W"));
			beatList.add(new Beat(80851, "E"));
			beatList.add(new Beat(81687, "R"));
			beatList.add(new Beat(82059, "Q"));
			beatList.add(new Beat(83034, "W"));
			beatList.add(new Beat(83893, "E"));
			beatList.add(new Beat(84195, "R"));
			beatList.add(new Beat(85124, "Q"));
			beatList.add(new Beat(85495, "W"));
			beatList.add(new Beat(85960, "E"));
			beatList.add(new Beat(86447, "R"));
			beatList.add(new Beat(87353, "Q"));
			beatList.add(new Beat(88166, "W"));
			beatList.add(new Beat(88421, "E"));
			beatList.add(new Beat(89559, "R"));
			beatList.add(new Beat(90488, "Q"));
			beatList.add(new Beat(90790, "W"));
			beatList.add(new Beat(91742, "E"));
			beatList.add(new Beat(92833, "R"));
			beatList.add(new Beat(93646, "Q"));
			beatList.add(new Beat(94064, "W"));
			beatList.add(new Beat(94528, "E"));
			beatList.add(new Beat(94807, "R"));
			beatList.add(new Beat(95178, "Q"));
			beatList.add(new Beat(95596, "W"));
			beatList.add(new Beat(96269, "E"));
			beatList.add(new Beat(96687, "R"));
			beatList.add(new Beat(97082, "Q"));
			beatList.add(new Beat(97338, "W"));
			beatList.add(new Beat(98568, "E"));
			beatList.add(new Beat(99311, "R"));
			beatList.add(new Beat(99613, "Q"));
			beatList.add(new Beat(100542, "W"));
			beatList.add(new Beat(101494, "E"));
			beatList.add(new Beat(101773, "R"));
			beatList.add(new Beat(102748, "Q"));
			beatList.add(new Beat(103700, "W"));
			beatList.add(new Beat(104095, "E"));
			beatList.add(new Beat(104396, "R"));
			beatList.add(new Beat(104907, "Q"));
			beatList.add(new Beat(105906, "W"));
			beatList.add(new Beat(106254, "E"));
			beatList.add(new Beat(107183, "R"));
			beatList.add(new Beat(108228, "Q"));
			beatList.add(new Beat(109342, "W"));
			beatList.add(new Beat(110318, "E"));
			beatList.add(new Beat(110666, "R"));
			beatList.add(new Beat(111061, "Q"));
			beatList.add(new Beat(111502, "W"));
			beatList.add(new Beat(111780, "E"));
			beatList.add(new Beat(112105, "R"));
			beatList.add(new Beat(112500, "Q"));
			beatList.add(new Beat(112872, "W"));
			beatList.add(new Beat(113406, "E"));
			beatList.add(new Beat(113870, "R"));
			beatList.add(new Beat(114195, "Q"));
			beatList.add(new Beat(114520, "W"));
			beatList.add(new Beat(114822, "E"));
			beatList.add(new Beat(115078, "R"));
			beatList.add(new Beat(115960, "Q"));
			beatList.add(new Beat(116239, "W"));
			beatList.add(new Beat(116842, "E"));
			beatList.add(new Beat(117283, "R"));
			beatList.add(new Beat(118189, "Q"));
			beatList.add(new Beat(118444, "W"));
			beatList.add(new Beat(119373, "E"));
			beatList.add(new Beat(120372, "R"));
			beatList.add(new Beat(120674, "Q"));
			beatList.add(new Beat(121672, "W"));
			beatList.add(new Beat(122578, "E"));
			beatList.add(new Beat(122880, "R"));
			beatList.add(new Beat(123390, "Q"));
			beatList.add(new Beat(124784, "W"));
			beatList.add(new Beat(125991, "E"));
			beatList.add(new Beat(126989, "R"));
			beatList.add(new Beat(127268, "Q"));
			beatList.add(new Beat(127756, "W"));
			beatList.add(new Beat(128220, "E"));
			beatList.add(new Beat(128917, "R"));
			beatList.add(new Beat(129288, "Q"));
			beatList.add(new Beat(130054, "W"));
			beatList.add(new Beat(130403, "E"));
			beatList.add(new Beat(130867, "R"));
			beatList.add(new Beat(131517, "Q"));
			beatList.add(new Beat(132051, "W"));
			beatList.add(new Beat(132725, "E"));
			beatList.add(new Beat(133584, "R"));
			beatList.add(new Beat(133839, "Q"));
			beatList.add(new Beat(134466, "W"));
			beatList.add(new Beat(134861, "E"));
			beatList.add(new Beat(135790, "R"));
			beatList.add(new Beat(136068, "Q"));
			beatList.add(new Beat(136997, "W"));
			beatList.add(new Beat(137972, "E"));
			beatList.add(new Beat(139296, "R"));
			beatList.add(new Beat(140202, "Q"));
			beatList.add(new Beat(140527, "W"));
			beatList.add(new Beat(141014, "E"));
			beatList.add(new Beat(142384, "R"));
			beatList.add(new Beat(143267, "Q"));
			beatList.add(new Beat(143592, "W"));
			beatList.add(new Beat(144590, "E"));
			beatList.add(new Beat(144892, "R"));
			beatList.add(new Beat(145380, "Q"));
			beatList.add(new Beat(145821, "W"));
			beatList.add(new Beat(146959, "E"));
			beatList.add(new Beat(147632, "R"));
			beatList.add(new Beat(148143, "Q"));
			beatList.add(new Beat(148677, "W"));
			beatList.add(new Beat(148956, "E"));
			beatList.add(new Beat(149397, "R"));
			beatList.add(new Beat(149675, "Q"));
			beatList.add(new Beat(150325, "W"));
			beatList.add(new Beat(150627, "E"));
			beatList.add(new Beat(150906, "R"));
			beatList.add(new Beat(151394, "Q"));
			beatList.add(new Beat(152508, "W"));
			beatList.add(new Beat(152833, "E"));
			beatList.add(new Beat(153112, "R"));
			beatList.add(new Beat(153646, "Q"));
			beatList.add(new Beat(154319, "W"));
			beatList.add(new Beat(154621, "E"));
			beatList.add(new Beat(155039, "R"));
			beatList.add(new Beat(155318, "Q"));
			beatList.add(new Beat(155759, "W"));
			beatList.add(new Beat(156920, "E"));
			beatList.add(new Beat(157245, "R"));
			beatList.add(new Beat(157524, "Q"));
			beatList.add(new Beat(158058, "W"));
			beatList.add(new Beat(158615, "E"));
			beatList.add(new Beat(159103, "R"));
			beatList.add(new Beat(159451, "Q"));
			beatList.add(new Beat(159706, "W"));
			beatList.add(new Beat(160171, "E"));
			beatList.add(new Beat(160635, "R"));
			beatList.add(new Beat(160891, "Q"));
			beatList.add(new Beat(161216, "W"));
			beatList.add(new Beat(161657, "E"));
			beatList.add(new Beat(161912, "R"));
			beatList.add(new Beat(162423, "Q"));
			beatList.add(new Beat(162864, "W"));
			beatList.add(new Beat(163514, "E"));
			beatList.add(new Beat(163863, "R"));
			beatList.add(new Beat(164118, "Q"));
			beatList.add(new Beat(164583, "W"));
			beatList.add(new Beat(165233, "E"));
			beatList.add(new Beat(165767, "R"));
			beatList.add(new Beat(166254, "Q"));
			beatList.add(new Beat(166556, "W"));
			beatList.add(new Beat(167322, "E"));
			beatList.add(new Beat(167810, "R"));
			beatList.add(new Beat(168832, "Q"));
			beatList.add(new Beat(169993, "W"));
			beatList.add(new Beat(171038, "E"));
			beatList.add(new Beat(171966, "R"));
			beatList.add(new Beat(172222, "Q"));
			beatList.add(new Beat(173220, "W"));
			beatList.add(new Beat(174405, "E"));
			beatList.add(new Beat(174939, "R"));
			beatList.add(new Beat(175333, "Q"));
			beatList.add(new Beat(176587, "W"));
			beatList.add(new Beat(177841, "E"));
			beatList.add(new Beat(178723, "R"));
			beats = beatList.toArray(new Beat[0]);
		}
		 
		else if(titleName.equals("aespa - Supernova")) {
			String[] keys = {"Q", "W", "E", "R"};
			ArrayList<Beat> beatList = new ArrayList<>();
			beatList.add(new Beat(4551, "Q"));
			beatList.add(new Beat(4829, "W"));
			beatList.add(new Beat(6524, "E"));
			beatList.add(new Beat(6803, "R"));
			beatList.add(new Beat(8521, "Q"));
			beatList.add(new Beat(8939, "W"));
			beatList.add(new Beat(10541, "E"));
			beatList.add(new Beat(10913, "R"));
			beatList.add(new Beat(12515, "Q"));
			beatList.add(new Beat(12956, "W"));
			beatList.add(new Beat(14535, "E"));
			beatList.add(new Beat(14837, "R"));
			beatList.add(new Beat(16973, "Q"));
			beatList.add(new Beat(18529, "W"));
			beatList.add(new Beat(18970, "E"));
			beatList.add(new Beat(20526, "R"));
			beatList.add(new Beat(20990, "Q"));
			beatList.add(new Beat(22523, "W"));
			beatList.add(new Beat(22894, "E"));
			beatList.add(new Beat(24961, "R"));
			beatList.add(new Beat(26517, "Q"));
			beatList.add(new Beat(26911, "W"));
			beatList.add(new Beat(28537, "E"));
			beatList.add(new Beat(28978, "R"));
			beatList.add(new Beat(30534, "Q"));
			beatList.add(new Beat(30905, "W"));
			beatList.add(new Beat(32925, "E"));
			beatList.add(new Beat(34528, "R"));
			beatList.add(new Beat(34853, "Q"));
			beatList.add(new Beat(36524, "W"));
			beatList.add(new Beat(36966, "E"));
			beatList.add(new Beat(38521, "R"));
			beatList.add(new Beat(40518, "Q"));
			beatList.add(new Beat(40983, "W"));
			beatList.add(new Beat(41354, "E"));
			beatList.add(new Beat(42028, "R"));
			beatList.add(new Beat(42515, "Q"));
			beatList.add(new Beat(42980, "W"));
			beatList.add(new Beat(43514, "E"));
			beatList.add(new Beat(44025, "R"));
			beatList.add(new Beat(44326, "Q"));
			beatList.add(new Beat(44953, "W"));
			beatList.add(new Beat(46532, "E"));
			beatList.add(new Beat(46997, "R"));
			beatList.add(new Beat(47531, "Q"));
			beatList.add(new Beat(48018, "W"));
			beatList.add(new Beat(48529, "E"));
			beatList.add(new Beat(48947, "R"));
			beatList.add(new Beat(50526, "Q"));
			beatList.add(new Beat(50828, "W"));
			beatList.add(new Beat(51525, "E"));
			beatList.add(new Beat(52012, "R"));
			beatList.add(new Beat(52523, "Q"));
			beatList.add(new Beat(52964, "W"));
			beatList.add(new Beat(54520, "E"));
			beatList.add(new Beat(54984, "R"));
			beatList.add(new Beat(55518, "Q"));
			beatList.add(new Beat(56006, "W"));
			beatList.add(new Beat(57004, "E"));
			beatList.add(new Beat(58282, "R"));
			beatList.add(new Beat(58932, "Q"));
			beatList.add(new Beat(60302, "W"));
			beatList.add(new Beat(61022, "E"));
			beatList.add(new Beat(62159, "R"));
			beatList.add(new Beat(63018, "Q"));
			beatList.add(new Beat(64505, "W"));
			beatList.add(new Beat(65039, "E"));
			beatList.add(new Beat(66966, "R"));
			beatList.add(new Beat(68522, "Q"));
			beatList.add(new Beat(68986, "W"));
			beatList.add(new Beat(70983, "E"));
			beatList.add(new Beat(72515, "R"));
			beatList.add(new Beat(73026, "Q"));
			beatList.add(new Beat(74443, "W"));
			beatList.add(new Beat(75000, "E"));
			beatList.add(new Beat(76532, "R"));
			beatList.add(new Beat(76997, "Q"));
			beatList.add(new Beat(78483, "W"));
			beatList.add(new Beat(78994, "E"));
			beatList.add(new Beat(82964, "R"));
			beatList.add(new Beat(84520, "Q"));
			beatList.add(new Beat(85031, "W"));
			beatList.add(new Beat(86494, "E"));
			beatList.add(new Beat(88537, "R"));
			beatList.add(new Beat(88955, "Q"));
			beatList.add(new Beat(89373, "W"));
			beatList.add(new Beat(90023, "E"));
			beatList.add(new Beat(90534, "R"));
			beatList.add(new Beat(90952, "Q"));
			beatList.add(new Beat(91533, "W"));
			beatList.add(new Beat(92020, "E"));
			beatList.add(new Beat(92392, "R"));
			beatList.add(new Beat(92995, "Q"));
			beatList.add(new Beat(94040, "W"));
			beatList.add(new Beat(94528, "E"));
			beatList.add(new Beat(94969, "R"));
			beatList.add(new Beat(95526, "Q"));
			beatList.add(new Beat(95991, "W"));
			beatList.add(new Beat(96525, "E"));
			beatList.add(new Beat(96943, "R"));
			beatList.add(new Beat(98522, "Q"));
			beatList.add(new Beat(98940, "W"));
			beatList.add(new Beat(99520, "E"));
			beatList.add(new Beat(100008, "R"));
			beatList.add(new Beat(100519, "Q"));
			beatList.add(new Beat(100937, "W"));
			beatList.add(new Beat(101331, "E"));
			beatList.add(new Beat(102539, "R"));
			beatList.add(new Beat(102934, "Q"));
			beatList.add(new Beat(103514, "W"));
			beatList.add(new Beat(104002, "E"));
			beatList.add(new Beat(104350, "R"));
			beatList.add(new Beat(113290, "Q"));
			beatList.add(new Beat(113940, "W"));
			beatList.add(new Beat(114288, "E"));
			beatList.add(new Beat(115054, "R"));
			beatList.add(new Beat(115356, "Q"));
			beatList.add(new Beat(115821, "W"));
			beatList.add(new Beat(116169, "E"));
			beatList.add(new Beat(117005, "R"));
			beatList.add(new Beat(117446, "Q"));
			beatList.add(new Beat(118444, "W"));
			beatList.add(new Beat(123019, "E"));
			beatList.add(new Beat(123367, "R"));
			beatList.add(new Beat(123623, "Q"));
			beatList.add(new Beat(125689, "W"));
			beatList.add(new Beat(126664, "E"));
			beatList.add(new Beat(127036, "R"));
			beatList.add(new Beat(127291, "Q"));
			beatList.add(new Beat(127593, "W"));
			beatList.add(new Beat(129938, "E"));
			beatList.add(new Beat(130403, "R"));
			beatList.add(new Beat(131006, "Q"));
			beatList.add(new Beat(131355, "W"));
			beatList.add(new Beat(133816, "E"));
			beatList.add(new Beat(134489, "R"));
			beatList.add(new Beat(134861, "Q"));
			beatList.add(new Beat(135233, "W"));
			beatList.add(new Beat(135650, "E"));
			beatList.add(new Beat(135906, "R"));
			beatList.add(new Beat(137833, "Q"));
			beatList.add(new Beat(138158, "W"));
			beatList.add(new Beat(142663, "E"));
			beatList.add(new Beat(143127, "R"));
			beatList.add(new Beat(143476, "Q"));
			beatList.add(new Beat(144660, "W"));
			beatList.add(new Beat(145147, "E"));
			beatList.add(new Beat(145635, "R"));
			beatList.add(new Beat(146146, "Q"));
			beatList.add(new Beat(146634, "W"));
			beatList.add(new Beat(147144, "E"));
			beatList.add(new Beat(148143, "R"));
			beatList.add(new Beat(148654, "Q"));
			beatList.add(new Beat(149141, "W"));
			beatList.add(new Beat(149652, "E"));
			beatList.add(new Beat(150117, "R"));
			beatList.add(new Beat(150651, "Q"));
			beatList.add(new Beat(151069, "W"));
			beatList.add(new Beat(152160, "E"));
			beatList.add(new Beat(152647, "R"));
			beatList.add(new Beat(153112, "Q"));
			beatList.add(new Beat(153646, "W"));
			beatList.add(new Beat(154110, "E"));
			beatList.add(new Beat(154668, "R"));
			beatList.add(new Beat(155086, "Q"));
			beatList.add(new Beat(156154, "W"));
			beatList.add(new Beat(156665, "E"));
			beatList.add(new Beat(157129, "R"));
			beatList.add(new Beat(157640, "Q"));
			beatList.add(new Beat(158081, "W"));
			beatList.add(new Beat(159010, "E"));
			beatList.add(new Beat(159451, "R"));
			beatList.add(new Beat(160148, "Q"));
			beatList.add(new Beat(160658, "W"));
			beatList.add(new Beat(160937, "E"));
			beatList.add(new Beat(161657, "R"));
			beatList.add(new Beat(162144, "Q"));
			beatList.add(new Beat(162655, "W"));
			beatList.add(new Beat(163004, "E"));
			beatList.add(new Beat(164652, "R"));
			beatList.add(new Beat(165000, "Q"));
			beatList.add(new Beat(165651, "W"));
			beatList.add(new Beat(166138, "E"));
			beatList.add(new Beat(166649, "R"));
			beatList.add(new Beat(166974, "Q"));
			beatList.add(new Beat(168646, "W"));
			beatList.add(new Beat(168994, "E"));
			beatList.add(new Beat(169644, "R"));
			beatList.add(new Beat(170132, "Q"));
			beatList.add(new Beat(170643, "W"));
			beatList.add(new Beat(171061, "E"));
			beatList.add(new Beat(172640, "R"));
			beatList.add(new Beat(172988, "Q"));
			beatList.add(new Beat(173638, "W"));
			beatList.add(new Beat(174103, "E"));
			beats = beatList.toArray(new Beat[0]);
		}
		else if(titleName.equals("Touched - Hi Bully")) {
			String[] keys = {"Q", "W", "E", "R"};
			ArrayList<Beat> beatList = new ArrayList<>();
			beatList.add(new Beat(2136, "Q"));
			beatList.add(new Beat(2670, "W"));
			beatList.add(new Beat(3134, "E"));
			beatList.add(new Beat(3413, "R"));
			beatList.add(new Beat(4040, "Q"));
			beatList.add(new Beat(4318, "W"));
			beatList.add(new Beat(4643, "E"));
			beatList.add(new Beat(5178, "R"));
			beatList.add(new Beat(5503, "Q"));
			beatList.add(new Beat(5828, "W"));
			beatList.add(new Beat(6385, "E"));
			beatList.add(new Beat(6757, "R"));
			beatList.add(new Beat(7035, "Q"));
			beatList.add(new Beat(7383, "W"));
			beatList.add(new Beat(7941, "E"));
			beatList.add(new Beat(8335, "R"));
			beatList.add(new Beat(8707, "Q"));
			beatList.add(new Beat(9125, "W"));
			beatList.add(new Beat(9496, "E"));
			beatList.add(new Beat(9984, "R"));
			beatList.add(new Beat(10309, "Q"));
			beatList.add(new Beat(10657, "W"));
			beatList.add(new Beat(11308, "E"));
			beatList.add(new Beat(11726, "R"));
			beatList.add(new Beat(12027, "Q"));
			beatList.add(new Beat(12724, "W"));
			beatList.add(new Beat(13142, "E"));
			beatList.add(new Beat(13421, "R"));
			beatList.add(new Beat(13722, "Q"));
			beatList.add(new Beat(14326, "W"));
			beatList.add(new Beat(14582, "E"));
			beatList.add(new Beat(14907, "R"));
			beatList.add(new Beat(15534, "Q"));
			beatList.add(new Beat(16068, "W"));
			beatList.add(new Beat(16370, "E"));
			beatList.add(new Beat(16788, "R"));
			beatList.add(new Beat(17391, "Q"));
			beatList.add(new Beat(17949, "W"));
			beatList.add(new Beat(18274, "E"));
			beatList.add(new Beat(18552, "R"));
			beatList.add(new Beat(19133, "Q"));
			beatList.add(new Beat(19411, "W"));
			beatList.add(new Beat(19760, "E"));
			beatList.add(new Beat(20363, "R"));
			beatList.add(new Beat(20688, "Q"));
			beatList.add(new Beat(20944, "W"));
			beatList.add(new Beat(21246, "E"));
			beatList.add(new Beat(21594, "R"));
			beatList.add(new Beat(21873, "Q"));
			beatList.add(new Beat(22198, "W"));
			beatList.add(new Beat(22801, "E"));
			beatList.add(new Beat(23057, "R"));
			beatList.add(new Beat(23707, "Q"));
			beatList.add(new Beat(24009, "W"));
			beatList.add(new Beat(24589, "E"));
			beatList.add(new Beat(25216, "R"));
			beatList.add(new Beat(25588, "Q"));
			beatList.add(new Beat(25843, "W"));
			beatList.add(new Beat(26122, "E"));
			beatList.add(new Beat(26424, "R"));
			beatList.add(new Beat(26935, "Q"));
			beatList.add(new Beat(27213, "W"));
			beatList.add(new Beat(27492, "E"));
			beatList.add(new Beat(28398, "R"));
			beatList.add(new Beat(29442, "Q"));
			beatList.add(new Beat(29884, "W"));
			beatList.add(new Beat(30255, "E"));
			beatList.add(new Beat(30557, "R"));
			beatList.add(new Beat(30952, "Q"));
			beatList.add(new Beat(31277, "W"));
			beatList.add(new Beat(31625, "E"));
			beatList.add(new Beat(32275, "R"));
			beatList.add(new Beat(32531, "Q"));
			beatList.add(new Beat(32972, "W"));
			beatList.add(new Beat(33599, "E"));
			beatList.add(new Beat(33901, "R"));
			beatList.add(new Beat(34342, "Q"));
			beatList.add(new Beat(34946, "W"));
			beatList.add(new Beat(35247, "E"));
			beatList.add(new Beat(35549, "R"));
			beatList.add(new Beat(35967, "Q"));
			beatList.add(new Beat(36269, "W"));
			beatList.add(new Beat(36641, "E"));
			beatList.add(new Beat(37198, "R"));
			beatList.add(new Beat(37685, "Q"));
			beatList.add(new Beat(37964, "W"));
			beatList.add(new Beat(38568, "E"));
			beatList.add(new Beat(38823, "R"));
			beatList.add(new Beat(39125, "Q"));
			beatList.add(new Beat(39404, "W"));
			beatList.add(new Beat(39799, "E"));
			beatList.add(new Beat(40100, "R"));
			beatList.add(new Beat(40379, "Q"));
			beatList.add(new Beat(40843, "W"));
			beatList.add(new Beat(41192, "E"));
			beatList.add(new Beat(41470, "R"));
			beatList.add(new Beat(42004, "Q"));
			beatList.add(new Beat(42329, "W"));
			beatList.add(new Beat(42724, "E"));
			beatList.add(new Beat(43096, "R"));
			beatList.add(new Beat(43885, "Q"));
			beatList.add(new Beat(44489, "W"));
			beatList.add(new Beat(45116, "E"));
			beatList.add(new Beat(45743, "R"));
			beatList.add(new Beat(46091, "Q"));
			beatList.add(new Beat(46556, "W"));
			beatList.add(new Beat(46834, "E"));
			beatList.add(new Beat(47624, "R"));
			beatList.add(new Beat(48808, "Q"));
			beatList.add(new Beat(49365, "W"));
			beatList.add(new Beat(49644, "E"));
			beatList.add(new Beat(50108, "R"));
			beatList.add(new Beat(50898, "Q"));
			beatList.add(new Beat(51826, "W"));
			beatList.add(new Beat(52384, "E"));
			beatList.add(new Beat(52802, "R"));
			beatList.add(new Beat(53057, "Q"));
			beatList.add(new Beat(53521, "W"));
			beatList.add(new Beat(54288, "E"));
			beatList.add(new Beat(54543, "R"));
			beatList.add(new Beat(54845, "Q"));
			beatList.add(new Beat(55240, "W"));
			beatList.add(new Beat(55518, "E"));
			beatList.add(new Beat(56006, "R"));
			beatList.add(new Beat(56494, "Q"));
			beatList.add(new Beat(56958, "W"));
			beatList.add(new Beat(57655, "E"));
			beatList.add(new Beat(58119, "R"));
			beatList.add(new Beat(58537, "Q"));
			beatList.add(new Beat(58792, "W"));
			beatList.add(new Beat(59187, "E"));
			beatList.add(new Beat(59675, "R"));
			beatList.add(new Beat(60162, "Q"));
			beatList.add(new Beat(60511, "W"));
			beatList.add(new Beat(61068, "E"));
			beatList.add(new Beat(61625, "R"));
			beatList.add(new Beat(62693, "Q"));
			beatList.add(new Beat(62949, "W"));
			beatList.add(new Beat(63390, "E"));
			beatList.add(new Beat(64040, "R"));
			beatList.add(new Beat(64551, "Q"));
			beatList.add(new Beat(65085, "W"));
			beatList.add(new Beat(65364, "E"));
			beatList.add(new Beat(65735, "R"));
			beatList.add(new Beat(66455, "Q"));
			beatList.add(new Beat(67082, "W"));
			beatList.add(new Beat(67546, "E"));
			beatList.add(new Beat(67825, "R"));
			beatList.add(new Beat(68150, "Q"));
			beatList.add(new Beat(68986, "W"));
			beatList.add(new Beat(69427, "E"));
			beatList.add(new Beat(70635, "R"));
			beatList.add(new Beat(71192, "Q"));
			beatList.add(new Beat(71471, "W"));
			beatList.add(new Beat(71772, "E"));
			beatList.add(new Beat(72376, "R"));
			beatList.add(new Beat(72655, "Q"));
			beatList.add(new Beat(73049, "W"));
			beatList.add(new Beat(73584, "E"));
			beatList.add(new Beat(73862, "R"));
			beatList.add(new Beat(74234, "Q"));
			beatList.add(new Beat(74582, "W"));
			beatList.add(new Beat(74930, "E"));
			beatList.add(new Beat(75557, "R"));
			beatList.add(new Beat(75882, "Q"));
			beatList.add(new Beat(76997, "W"));
			beatList.add(new Beat(77926, "E"));
			beatList.add(new Beat(78506, "R"));
			beatList.add(new Beat(78785, "Q"));
			beatList.add(new Beat(79040, "W"));
			beatList.add(new Beat(79458, "E"));
			beatList.add(new Beat(79806, "R"));
			beatList.add(new Beat(80085, "Q"));
			beatList.add(new Beat(80805, "W"));
			beatList.add(new Beat(81130, "E"));
			beatList.add(new Beat(81664, "R"));
			beatList.add(new Beat(82245, "Q"));
			beatList.add(new Beat(82570, "W"));
			beatList.add(new Beat(82825, "E"));
			beatList.add(new Beat(83568, "R"));
			beatList.add(new Beat(83824, "Q"));
			beatList.add(new Beat(84079, "W"));
			beatList.add(new Beat(84659, "E"));
			beatList.add(new Beat(84915, "R"));
			beatList.add(new Beat(85194, "Q"));
			beatList.add(new Beat(85658, "W"));
			beatList.add(new Beat(86238, "E"));
			beatList.add(new Beat(86517, "R"));
			beatList.add(new Beat(86912, "Q"));
			beatList.add(new Beat(87399, "W"));
			beatList.add(new Beat(87678, "E"));
			beatList.add(new Beat(88119, "R"));
			beatList.add(new Beat(88584, "Q"));
			beatList.add(new Beat(89002, "W"));
			beatList.add(new Beat(89327, "E"));
			beatList.add(new Beat(89629, "R"));
			beatList.add(new Beat(89977, "Q"));
			beatList.add(new Beat(90511, "W"));
			beatList.add(new Beat(90859, "E"));
			beatList.add(new Beat(91184, "R"));
			beatList.add(new Beat(91927, "Q"));
			beatList.add(new Beat(92206, "W"));
			beatList.add(new Beat(92461, "E"));
			beatList.add(new Beat(92879, "R"));
			beatList.add(new Beat(93297, "Q"));
			beatList.add(new Beat(93738, "W"));
			beatList.add(new Beat(94133, "E"));
			beatList.add(new Beat(94621, "R"));
			beatList.add(new Beat(94992, "Q"));
			beatList.add(new Beat(95434, "W"));
			beatList.add(new Beat(96153, "E"));
			beatList.add(new Beat(97314, "R"));
			beatList.add(new Beat(98057, "Q"));
			beatList.add(new Beat(98568, "W"));
			beatList.add(new Beat(99125, "E"));
			beatList.add(new Beat(99590, "R"));
			beatList.add(new Beat(100008, "Q"));
			beatList.add(new Beat(100495, "W"));
			beatList.add(new Beat(100937, "E"));
			beatList.add(new Beat(101587, "R"));
			beatList.add(new Beat(102214, "Q"));
			beatList.add(new Beat(103096, "W"));
			beatList.add(new Beat(104002, "E"));
			beatList.add(new Beat(104629, "R"));
			beatList.add(new Beat(105000, "Q"));
			beatList.add(new Beat(105325, "W"));
			beatList.add(new Beat(105790, "E"));
			beatList.add(new Beat(106440, "R"));
			beatList.add(new Beat(107020, "Q"));
			beatList.add(new Beat(107926, "W"));
			beatList.add(new Beat(108251, "E"));
			beatList.add(new Beat(108855, "R"));
			beatList.add(new Beat(109458, "Q"));
			beatList.add(new Beat(109807, "W"));
			beatList.add(new Beat(110248, "E"));
			beatList.add(new Beat(110596, "R"));
			beatList.add(new Beat(111316, "Q"));
			beatList.add(new Beat(111896, "W"));
			beatList.add(new Beat(112802, "E"));
			beatList.add(new Beat(113708, "R"));
			beatList.add(new Beat(114311, "Q"));
			beatList.add(new Beat(114660, "W"));
			beatList.add(new Beat(115054, "E"));
			beatList.add(new Beat(115496, "R"));
			beatList.add(new Beat(116122, "Q"));
			beatList.add(new Beat(116749, "W"));
			beatList.add(new Beat(117864, "E"));
			beatList.add(new Beat(118561, "R"));
			beatList.add(new Beat(119188, "Q"));
			beatList.add(new Beat(119559, "W"));
			beatList.add(new Beat(120023, "E"));
			beatList.add(new Beat(120279, "R"));
			beatList.add(new Beat(120813, "Q"));
			beatList.add(new Beat(121324, "W"));
			beatList.add(new Beat(121858, "E"));
			beatList.add(new Beat(122531, "R"));
			beatList.add(new Beat(123205, "Q"));
			beatList.add(new Beat(123994, "W"));
			beatList.add(new Beat(124296, "E"));
			beatList.add(new Beat(124737, "R"));
			beatList.add(new Beat(125062, "Q"));
			beatList.add(new Beat(125341, "W"));
			beatList.add(new Beat(125828, "E"));
			beatList.add(new Beat(126571, "R"));
			beatList.add(new Beat(128243, "Q"));
			beatList.add(new Beat(128568, "W"));
			beatList.add(new Beat(128963, "E"));
			beatList.add(new Beat(129242, "R"));
			beatList.add(new Beat(129799, "Q"));
			beatList.add(new Beat(130078, "W"));
			beatList.add(new Beat(130681, "E"));
			beatList.add(new Beat(131285, "R"));
			beatList.add(new Beat(131796, "Q"));
			beatList.add(new Beat(132121, "W"));
			beatList.add(new Beat(132469, "E"));
			beatList.add(new Beat(132957, "R"));
			beatList.add(new Beat(133398, "Q"));
			beatList.add(new Beat(133654, "W"));
			beatList.add(new Beat(134164, "E"));
			beatList.add(new Beat(134489, "R"));
			beatList.add(new Beat(134977, "Q"));
			beatList.add(new Beat(135418, "W"));
			beatList.add(new Beat(136138, "E"));
			beatList.add(new Beat(136417, "R"));
			beatList.add(new Beat(136928, "Q"));
			beatList.add(new Beat(137206, "W"));
			beatList.add(new Beat(137485, "E"));
			beatList.add(new Beat(137763, "R"));
			beatList.add(new Beat(138135, "Q"));
			beatList.add(new Beat(138994, "W"));
			beatList.add(new Beat(139389, "E"));
			beatList.add(new Beat(139923, "R"));
			beatList.add(new Beat(140689, "Q"));
			beatList.add(new Beat(140991, "W"));
			beatList.add(new Beat(141548, "E"));
			beatList.add(new Beat(141943, "R"));
			beatList.add(new Beat(142245, "Q"));
			beatList.add(new Beat(142616, "W"));
			beatList.add(new Beat(142988, "E"));
			beatList.add(new Beat(143360, "R"));
			beatList.add(new Beat(143847, "Q"));
			beatList.add(new Beat(144520, "W"));
			beatList.add(new Beat(145194, "E"));
			beatList.add(new Beat(145542, "R"));
			beatList.add(new Beat(146076, "Q"));
			beatList.add(new Beat(146448, "W"));
			beatList.add(new Beat(146726, "E"));
			beatList.add(new Beat(147191, "R"));
			beatList.add(new Beat(147539, "Q"));
			beatList.add(new Beat(147980, "W"));
			beatList.add(new Beat(148236, "E"));
			beatList.add(new Beat(148654, "R"));
			beatList.add(new Beat(149234, "Q"));
			beatList.add(new Beat(150093, "W"));
			beatList.add(new Beat(150627, "E"));
			beatList.add(new Beat(151208, "R"));
			beatList.add(new Beat(151788, "Q"));
			beatList.add(new Beat(152044, "W"));
			beatList.add(new Beat(152485, "E"));
			beatList.add(new Beat(152996, "R"));
			beatList.add(new Beat(153367, "Q"));
			beatList.add(new Beat(154041, "W"));
			beatList.add(new Beat(154552, "E"));
			beatList.add(new Beat(155016, "R"));
			beatList.add(new Beat(155504, "Q"));
			beatList.add(new Beat(155991, "W"));
			beatList.add(new Beat(156618, "E"));
			beatList.add(new Beat(157222, "R"));
			beatList.add(new Beat(157640, "Q"));
			beatList.add(new Beat(157918, "W"));
			beatList.add(new Beat(158336, "E"));
			beatList.add(new Beat(159103, "R"));
			beatList.add(new Beat(159869, "Q"));
			beatList.add(new Beat(160403, "W"));
			beatList.add(new Beat(160844, "E"));
			beatList.add(new Beat(161192, "R"));
			beatList.add(new Beat(161610, "Q"));
			beatList.add(new Beat(162005, "W"));
			beatList.add(new Beat(162377, "E"));
			beatList.add(new Beat(162887, "R"));
			beatList.add(new Beat(163213, "Q"));
			beatList.add(new Beat(164025, "W"));
			beatList.add(new Beat(165163, "E"));
			beatList.add(new Beat(165744, "R"));
			beatList.add(new Beat(166115, "Q"));
			beatList.add(new Beat(166417, "W"));
			beatList.add(new Beat(166881, "E"));
			beatList.add(new Beat(167299, "R"));
			beatList.add(new Beat(168205, "Q"));
			beatList.add(new Beat(168925, "W"));
			beatList.add(new Beat(169436, "E"));
			beatList.add(new Beat(169993, "R"));
			beatList.add(new Beat(170341, "Q"));
			beatList.add(new Beat(170666, "W"));
			beatList.add(new Beat(171270, "E"));
			beatList.add(new Beat(171665, "R"));
			beatList.add(new Beat(172013, "Q"));
			beatList.add(new Beat(172431, "W"));
			beatList.add(new Beat(172826, "E"));
			beatList.add(new Beat(173754, "R"));
			beatList.add(new Beat(174219, "Q"));
			beatList.add(new Beat(174753, "W"));
			beatList.add(new Beat(175426, "E"));
			beatList.add(new Beat(175798, "R"));
			beatList.add(new Beat(176123, "Q"));
			beatList.add(new Beat(176657, "W"));
			beatList.add(new Beat(177028, "E"));
			beatList.add(new Beat(177655, "R"));
			beatList.add(new Beat(177957, "Q"));
			beatList.add(new Beat(178329, "W"));
			beats = beatList.toArray(new Beat[0]);
		}
		
		
		int i = 0;
		
		gameMusic.start();
		
		while (i < beats.length && !isInterrupted()) {
			boolean droped = false;
			if(beats[i].getTime() <= gameMusic.getTime()) {
				Note note = new Note(beats[i].getNoteName());
				note.start();
				noteList.add(note);
				i++;
				droped = true;
			}
			if(!droped) {
				try {
					Thread.sleep(5);
				}catch (InterruptedException e) {
			        System.out.println("dropNotes interrupted, exiting...");
			        return;
				}
			}
		}
	}
	public void judge(String input) {
		for(int i = 0; i < noteList.size();i++) {
			Note note = noteList.get(i);
			if(input.equals(note.getNoteType())) {
				judgeEvent(note.judge());
				break;
			}
		}
	}
	public void judgeEvent(String judge) {
	    int comboBonus = (combo / 10) * 5; // 10콤보당 5점 추가

	    switch (judge) {
	        case "Perfect":
	            score += 100 + comboBonus;
	            combo++;
	            judgeImage = new ImageIcon(Main.class.getResource("/Img/perfect_but.png")).getImage();
	            break;
	        case "Great":
	            score += 50 + comboBonus;
	            combo++;
	            judgeImage = new ImageIcon(Main.class.getResource("/Img/great_but.png")).getImage();
	            break;
	        case "Miss":
	            score -= 30;
	            combo = 0;
	            judgeImage = new ImageIcon(Main.class.getResource("/Img/miss_but.png")).getImage();
	            break;
	    }

	    if (combo > maxCombo) {
	        maxCombo = combo;
	    }
	}
	public boolean isGameFinished() {
	    return isGameFinished;
	}
	public String getRank() {
	    if (score >= 27000) return "S";
	    else if (score >= 24000) return "A";
	    else if (score >= 20000) return "B";
	    else if (score >= 15000) return "C";
	    else if (score >= 10000) return "D";
	    else return "F";
	}
	
}


